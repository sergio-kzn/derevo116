# Generated by Django 3.1 on 2020-11-03 13:17

from django.db import migrations, models
import django.db.models.deletion
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ColorGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color_group_name', models.CharField(help_text='Показывается только в админке.', max_length=100, verbose_name='Группа цветов')),
                ('color_group_title', models.CharField(blank=True, help_text='Показывается во всплывающем окне при выборе цвета.<br>Если не заполнено, показывается название группы.', max_length=200, null=True, verbose_name='Заголовок')),
            ],
            options={
                'verbose_name': 'Цвета (группа)',
                'verbose_name_plural': 'Цвета (группы)',
            },
        ),
        migrations.CreateModel(
            name='OptionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_group', models.CharField(help_text='Например, название товара, к которому эти опции относятся', max_length=100, verbose_name='Название группы опций')),
                ('option_type', models.CharField(choices=[('1', 'Radio Inputs'), ('2', 'Buttons')], default='1', max_length=50, verbose_name='Тип опций')),
                ('option_title', models.CharField(blank=True, help_text='Отображается рядом с опциями на странице товара', max_length=100, null=True, verbose_name='Заголовок')),
                ('options_sort', models.IntegerField(default=0, verbose_name='Сортировка')),
                ('product_price_option', models.CharField(blank=True, default='Объем', max_length=50, null=True, verbose_name='Опция')),
                ('product_price_option_price', models.CharField(blank=True, default='Цена', max_length=50, null=True, verbose_name='Цена')),
                ('product_price_option_extra_1', models.CharField(blank=True, help_text='Расход&nbsp;м&lt;sup&gt;2&lt;/sup&gt;&lt;br&gt;(1&nbsp;слой&nbsp;/&nbsp;2&nbsp;слоя)<br>', max_length=50, null=True, verbose_name='Дополнительно 1')),
                ('product_price_option_extra_2', models.CharField(blank=True, help_text='Цена&nbsp;р/м&lt;sup&gt;2&lt;/sup&gt;&lt;br&gt;(1&nbsp;слой&nbsp;/&nbsp;2&nbsp;слоя)', max_length=50, null=True, verbose_name='Дополнительно 2')),
            ],
            options={
                'verbose_name': 'Опция (группа)',
                'verbose_name_plural': 'Опции (группы)',
            },
        ),
        migrations.CreateModel(
            name='OptionPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_title', models.CharField(max_length=20, verbose_name='Опция')),
                ('option_sort', models.IntegerField(default=0, verbose_name='Сортировка')),
            ],
            options={
                'verbose_name': 'Опция',
                'verbose_name_plural': 'Опции',
                'ordering': ['option_sort', 'option_title'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_show', models.BooleanField(default=True, verbose_name='Показывать?')),
                ('product_vendor_code', models.CharField(max_length=20, unique=True, verbose_name='Артикул')),
                ('product_title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('product_url', models.SlugField(max_length=100, unique=True, verbose_name='Ссылка url')),
                ('product_extra_desc', models.TextField(blank=True, help_text='Дополнительная информация, показывается рядом с ценой', null=True, verbose_name='Краткое описание')),
                ('product_img', sorl.thumbnail.fields.ImageField(blank=True, help_text='Основное изображение товара, рекомендуемый размер 1000х700 px', null=True, upload_to='products', verbose_name='Изображение товара')),
                ('product_img_title', models.CharField(blank=True, help_text='Подпись под изображением и alt', max_length=100, null=True, verbose_name='Подпись')),
                ('product_content', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('product_file', models.FileField(blank=True, null=True, upload_to='products/files', verbose_name='Прикрепить файл (Техническое руководство) pdf')),
                ('product_count', models.CharField(blank=True, default='В наличии более 10л.', help_text='В наличии более 10 л.<br>В наличии более 10 шт.<br>В наличии 1 шт.<br>Под заказ<br>Нет в наличии.', max_length=30, null=True, verbose_name='Наличие товара')),
                ('product_price_choice', models.CharField(choices=[('1', 'Простая цена'), ('2', 'Цена с опциями')], default='2', max_length=50, verbose_name='Тип цены')),
                ('product_price', models.CharField(default=0, help_text='Введите цену без копеек и без знака рубля', max_length=30, verbose_name='Простая цена (Руб.)')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='ProductImageGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_group', models.CharField(help_text='Название группы изображений, например название Товара', max_length=100, verbose_name='Дополнительные изображения')),
                ('img_group_sort', models.IntegerField(default=0, verbose_name='Сортировка')),
            ],
            options={
                'verbose_name': 'Изображение (группа)',
                'verbose_name_plural': 'Изображения (группы)',
                'ordering': ['img_group_sort'],
            },
        ),
        migrations.CreateModel(
            name='ProductTab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tab_title_admin', models.CharField(max_length=200, verbose_name='Название (в админке)')),
                ('tab_title', models.CharField(max_length=200, verbose_name='Название (в шаблоне)')),
                ('tab_content', models.TextField(blank=True, null=True, verbose_name='Содержимое доп. вкладки')),
                ('tab_slug', models.SlugField(default='additionally', verbose_name='Ссылка href="# ..."')),
            ],
            options={
                'verbose_name': 'Вкладка',
                'verbose_name_plural': 'Вкладки',
            },
        ),
        migrations.CreateModel(
            name='ProductVendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_title', models.CharField(max_length=100, verbose_name='Поставщик')),
                ('vendor_url', models.SlugField(unique=True, verbose_name='Ссылка url')),
                ('vendor_img', sorl.thumbnail.fields.ImageField(blank=True, upload_to='vendors', verbose_name='Изображение')),
                ('vendor_sort', models.IntegerField(default=0, verbose_name='Сортировка')),
                ('vendor_show', models.BooleanField(default=True, verbose_name='Показывать?')),
            ],
            options={
                'verbose_name': 'Поставщик',
                'verbose_name_plural': 'Поставщики',
                'ordering': ['vendor_sort'],
            },
        ),
        migrations.CreateModel(
            name='ProductOptionPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_option_price', models.CharField(blank=True, max_length=10, null=True, verbose_name='Цена')),
                ('product_option_extra_1', models.CharField(blank=True, max_length=50, null=True, verbose_name='Дополнительно 1')),
                ('product_option_extra_2', models.CharField(blank=True, max_length=50, null=True, verbose_name='Дополнительно 2')),
                ('product_option_sort', models.IntegerField(default=0, verbose_name='Сортировка')),
                ('product_option', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Product.optionprice', verbose_name='Выберите опцию')),
                ('product_option_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Product.optiongroup', verbose_name='Группа опций')),
            ],
            options={
                'verbose_name': 'Опция',
                'verbose_name_plural': 'Опции',
                'ordering': ['product_option_sort', 'product_option'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_file', sorl.thumbnail.fields.ImageField(upload_to='products', verbose_name='Изображение товара')),
                ('img_title', models.CharField(max_length=100, verbose_name='Подпись')),
                ('img_sort', models.IntegerField(default=0, verbose_name='Сортировка')),
                ('img_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Product.productimagegroup')),
            ],
            options={
                'ordering': ['img_sort'],
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_title', models.CharField(max_length=100, verbose_name='Категория')),
                ('category_sort', models.IntegerField(default=0, verbose_name='Сортировка')),
                ('category_url', models.SlugField(unique=True, verbose_name='Ссылка url (проверьте root_url)')),
                ('category_main_menu', models.BooleanField(default=False, verbose_name='Показывать в главном меню?')),
                ('category_parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Product.productcategory', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['category_sort'],
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_distinguish_bold', models.BooleanField(default=False, help_text='Выделяет всю строку жирным', verbose_name='<b>')),
                ('attribute_distinguish_yellow', models.BooleanField(default=False, help_text='Выделяет всю строку желтым фоном', verbose_name='bg-y')),
                ('attribute_distinguish_empty', models.BooleanField(default=False, help_text='Включите, если хотите добавить пустую строку', verbose_name='nbsp')),
                ('attribute_distinguish_colspan', models.BooleanField(default=False, help_text='Объединяет ячейки в одну', verbose_name='2:1')),
                ('attribute_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Атрибут')),
                ('attribute_value', models.CharField(blank=True, max_length=200, null=True, verbose_name='Значение атрибута (необязательно)')),
                ('attribute_sort', models.IntegerField(default=0, verbose_name='Сортировка')),
                ('attribute_product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Product.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Атрибут',
                'verbose_name_plural': 'Атрибуты',
                'ordering': ['attribute_sort', 'id'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='product_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Product.productcategory', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_color',
            field=models.ManyToManyField(blank=True, to='Product.ColorGroup', verbose_name='Группа цветов'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_images',
            field=models.ManyToManyField(blank=True, to='Product.ProductImageGroup', verbose_name='Дополнительные изображения товара'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_price_options',
            field=models.ManyToManyField(blank=True, to='Product.OptionGroup', verbose_name='Опции цены'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_tab',
            field=models.ManyToManyField(blank=True, to='Product.ProductTab', verbose_name='Доп. вкладки'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Product.productvendor', verbose_name='Поставщик'),
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color_title', models.CharField(max_length=50, verbose_name='Подпись')),
                ('color_image', sorl.thumbnail.fields.ImageField(blank=True, null=True, upload_to='products/colors', verbose_name='Изображение')),
                ('color_html', models.CharField(blank=True, help_text='Цвет в формате HEX, например: "#ebe7e0"', max_length=20, null=True, verbose_name='Цвет HEX')),
                ('color_sort', models.IntegerField(default=0, verbose_name='Сортировка')),
                ('color_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Product.colorgroup')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
                'ordering': ['color_sort', 'color_title'],
            },
        ),
    ]
